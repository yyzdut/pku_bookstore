<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pkurw.bookstore.mapper.bookMessageMapper">
  <resultMap id="BaseResultMap" type="com.pkurw.bookstore.bean.bookMessage">
    <id column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="bname" jdbcType="VARCHAR" property="bname" />
    <result column="book_number" jdbcType="INTEGER" property="bookNumber" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="book_amount" jdbcType="INTEGER" property="bookAmount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    book_id, bname, book_number, author, status, book_amount
  </sql>
  <select id="selectByExample" parameterType="com.pkurw.bookstore.bean.bookMessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book_message
    where book_id = #{bookId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book_message
    where book_id = #{bookId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pkurw.bookstore.bean.bookMessageExample">
    delete from book_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pkurw.bookstore.bean.bookMessage">
    insert into book_message (book_id, bname, book_number, 
      author, status, book_amount
      )
    values (#{bookId,jdbcType=INTEGER}, #{bname,jdbcType=VARCHAR}, #{bookNumber,jdbcType=INTEGER}, 
      #{author,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{bookAmount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pkurw.bookstore.bean.bookMessage">
    insert into book_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        book_id,
      </if>
      <if test="bname != null">
        bname,
      </if>
      <if test="bookNumber != null">
        book_number,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="bookAmount != null">
        book_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="bname != null">
        #{bname,jdbcType=VARCHAR},
      </if>
      <if test="bookNumber != null">
        #{bookNumber,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="bookAmount != null">
        #{bookAmount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pkurw.bookstore.bean.bookMessageExample" resultType="java.lang.Long">
    select count(*) from book_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book_message
    <set>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.bname != null">
        bname = #{record.bname,jdbcType=VARCHAR},
      </if>
      <if test="record.bookNumber != null">
        book_number = #{record.bookNumber,jdbcType=INTEGER},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.bookAmount != null">
        book_amount = #{record.bookAmount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book_message
    set book_id = #{record.bookId,jdbcType=INTEGER},
      bname = #{record.bname,jdbcType=VARCHAR},
      book_number = #{record.bookNumber,jdbcType=INTEGER},
      author = #{record.author,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      book_amount = #{record.bookAmount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pkurw.bookstore.bean.bookMessage">
    update book_message
    <set>
      <if test="bname != null">
        bname = #{bname,jdbcType=VARCHAR},
      </if>
      <if test="bookNumber != null">
        book_number = #{bookNumber,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="bookAmount != null">
        book_amount = #{bookAmount,jdbcType=INTEGER},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pkurw.bookstore.bean.bookMessage">
    update book_message
    set bname = #{bname,jdbcType=VARCHAR},
      book_number = #{bookNumber,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      book_amount = #{bookAmount,jdbcType=INTEGER}
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
</mapper>